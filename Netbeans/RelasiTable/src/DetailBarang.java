/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.Date;

public class DetailBarang extends javax.swing.JFrame {
    private DefaultTableModel tabmode;
    private Connection koneksi;
    
    /**
     * Creates new form DetailBarang
     */
    public DetailBarang() {
        initComponents();
        koneksi = Koneksi.getKoneksi();
        
        // Set textfield nama dan harga barang menjadi readonly
        jTextField2.setEditable(false);  // Nama Barang readonly
        jTextField3.setEditable(false);  // Harga Barang readonly
        
        loadKodeBarang();
        kosongkanForm();
        tampildata();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("DETAIL BARANG");

        jLabel2.setText("NO.FAKTUR");

        jLabel3.setText("Kode Barang");

        jLabel4.setText("Harga Barang");

        jLabel5.setText("Nama Barang");

        jLabel6.setText("Kuantitas");

        jButton1.setText("RESET");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SAVE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("EDIT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("DELETE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField1");

        jTextField3.setText("jTextField1");

        jTextField4.setText("jTextField1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(jButton4)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1KeyReleased

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        cariBarang();
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        kosongkanForm();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            // Validasi input
            if (jTextField1.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No Faktur tidak boleh kosong!");
                return;
            }
            if (jComboBox1.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Pilih Kode Barang!");
                return;
            }
            if (jTextField4.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Quantity tidak boleh kosong!");
                return;
            }

            // Cek apakah data sudah ada
            String sqlCek = "SELECT * FROM tb_detail WHERE no_faktur=? AND kode_barang=?";
            PreparedStatement psCek = koneksi.prepareStatement(sqlCek);
            psCek.setString(1, jTextField1.getText().trim());
            psCek.setString(2, jComboBox1.getSelectedItem().toString());
            ResultSet rs = psCek.executeQuery();

            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Data sudah ada untuk no faktur dan kode barang ini!");
                return;
            }

            // Simpan ke database
            String sql = "INSERT INTO tb_detail (no_faktur, kode_barang, qty) VALUES (?, ?, ?)";
            PreparedStatement ps = koneksi.prepareStatement(sql);
            ps.setString(1, jTextField1.getText().trim());
            ps.setString(2, jComboBox1.getSelectedItem().toString());
            ps.setString(3, jTextField4.getText().trim());
            
            int result = ps.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
                tampildata();
                kosongkanForm();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan: " + e.getMessage());
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        updateData();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        hapusData();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // Ketika baris tabel diklik
        int baris = jTable2.getSelectedRow();
        if (baris != -1) {
            jTextField1.setText(jTable2.getValueAt(baris, 0).toString());
            String kodeBarang = jTable2.getValueAt(baris, 1).toString();
            jComboBox1.setSelectedItem(kodeBarang);
            jTextField2.setText(jTable2.getValueAt(baris, 2).toString());
            jTextField3.setText(jTable2.getValueAt(baris, 3).toString());
            jTextField4.setText(jTable2.getValueAt(baris, 4).toString());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetailBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    private void loadKodeBarang() {
        try {
            String sql = "SELECT kode_barang, nama_barang FROM tb_barang";
            Statement stmt = koneksi.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            jComboBox1.removeAllItems();
            jComboBox1.addItem("-- Pilih Kode Barang --");
            
            while (rs.next()) {
                String item = rs.getString("kode_barang");
                jComboBox1.addItem(item);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading kode barang: " + e.getMessage());
        }
    }
    
    private void kosongkanForm() {
        jTextField1.setText("");     // No Faktur
        jComboBox1.setSelectedIndex(0); // Reset combo box kode barang
        jTextField2.setText("");     // Nama Barang (readonly)
        jTextField3.setText("");     // Harga Barang (readonly)
        jTextField4.setText("");     // Qty
        jTextField1.requestFocus();
    }
    
    public void tampildata() {
        Object[] baris = {"No Faktur", "Kode Barang", "Nama Barang", "Harga Barang", "Qty"};
        tabmode = new DefaultTableModel(null, baris);
        jTable2.setModel(tabmode);
        
        String sql = "SELECT d.no_faktur, d.kode_barang, b.nama_barang, b.harga_barang, d.qty " +
                    "FROM tb_detail d " +
                    "JOIN tb_barang b ON d.kode_barang = b.kode_barang " +
                    "ORDER BY d.no_faktur";
                    
        try {
            Statement stmt = koneksi.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String[] data = {
                    rs.getString("no_faktur"),
                    rs.getString("kode_barang"),
                    rs.getString("nama_barang"),
                    rs.getString("harga_barang"),
                    rs.getString("qty")
                };
                tabmode.addRow(data);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error menampilkan data: " + e.getMessage());
        }
    }
    
    private void cariBarang() {
        if (jComboBox1.getSelectedIndex() > 0) {
            try {
                String kodeBarang = jComboBox1.getSelectedItem().toString();
                String sql = "SELECT nama_barang, harga_barang FROM tb_barang WHERE kode_barang = ?";
                PreparedStatement ps = koneksi.prepareStatement(sql);
                ps.setString(1, kodeBarang);
                ResultSet rs = ps.executeQuery();
                
                if (rs.next()) {
                    // Set nama dan harga barang otomatis
                    jTextField2.setText(rs.getString("nama_barang"));
                    jTextField3.setText(rs.getString("harga_barang"));
                } else {
                    jTextField2.setText("");
                    jTextField3.setText("");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error mencari barang: " + e.getMessage());
            }
        } else {
            jTextField2.setText("");
            jTextField3.setText("");
        }
    }
    
    private boolean validasiInput() {
        if (jTextField1.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No Faktur tidak boleh kosong!");
            jTextField1.requestFocus();
            return false;
        }
        if (jComboBox1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Pilih Kode Barang terlebih dahulu!");
            jComboBox1.requestFocus();
            return false;
        }
        if (jTextField4.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Quantity tidak boleh kosong!");
            jTextField4.requestFocus();
            return false;
        }
        try {
            int qty = Integer.parseInt(jTextField4.getText().trim());
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Quantity harus lebih dari 0!");
                jTextField4.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Quantity harus berupa angka!");
            jTextField4.requestFocus();
            return false;
        }
        return true;
    }
    
    private void simpanData() {
        if (!validasiInput()) {
            return;
        }
        
        try {
            // Insert ke tb_transaksi jika belum ada
            String sqlCek = "SELECT COUNT(*) FROM tb_transaksi WHERE no_faktur = ?";
            PreparedStatement psCek = koneksi.prepareStatement(sqlCek);
            psCek.setString(1, jTextField1.getText().trim());
            ResultSet rs = psCek.executeQuery();
            rs.next();
            
            if (rs.getInt(1) == 0) {
                String sqlTransaksi = "INSERT INTO tb_transaksi (no_faktur, tgl) VALUES (?, CURRENT_DATE)";
                PreparedStatement psTransaksi = koneksi.prepareStatement(sqlTransaksi);
                psTransaksi.setString(1, jTextField1.getText().trim());
                psTransaksi.executeUpdate();
            }
            
            // Insert ke tb_detail
            String sqlDetail = "INSERT INTO tb_detail (no_faktur, kode_barang, qty) VALUES (?, ?, ?)";
            PreparedStatement psDetail = koneksi.prepareStatement(sqlDetail);
            psDetail.setString(1, jTextField1.getText().trim());
            psDetail.setString(2, jComboBox1.getSelectedItem().toString());
            psDetail.setString(3, jTextField4.getText().trim());
            psDetail.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
            kosongkanForm();
            tampildata();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage());
        }
    }
    
    private void updateData() {
        if (!validasiInput()) {
            return;
        }
        
        try {
            String sql = "UPDATE tb_detail SET qty=? WHERE no_faktur=? AND kode_barang=?";
            PreparedStatement ps = koneksi.prepareStatement(sql);
            ps.setString(1, jTextField4.getText().trim());
            ps.setString(2, jTextField1.getText().trim());
            ps.setString(3, jComboBox1.getSelectedItem().toString());
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
            kosongkanForm();
            tampildata();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate data: " + e.getMessage());
        }
    }
    
    private void hapusData() {
        String noFaktur = jTextField1.getText().trim();
        if (jComboBox1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus!");
            return;
        }
        
        int konfirmasi = JOptionPane.showConfirmDialog(this,
            "Apakah Anda yakin ingin menghapus data ini?",
            "Konfirmasi",
            JOptionPane.YES_NO_OPTION);
            
        if (konfirmasi == JOptionPane.YES_OPTION) {
            try {
                String sql = "DELETE FROM tb_detail WHERE no_faktur=? AND kode_barang=?";
                PreparedStatement ps = koneksi.prepareStatement(sql);
                ps.setString(1, noFaktur);
                ps.setString(2, jComboBox1.getSelectedItem().toString());
                ps.executeUpdate();
                
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
                kosongkanForm();
                tampildata();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data: " + e.getMessage());
            }
        }
    }
    
   
}
